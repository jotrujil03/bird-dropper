<!DOCTYPE html>
<html lang="en" style="zoom:1.0;">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Bird Dropper</title>

    <!-- ✅ Favicon -->
    <link rel="icon" type="image/x-icon" href="/images/favicon.ico">
    <link rel="shortcut icon" type="image/x-icon" href="/images/favicon.ico">

    <link rel="stylesheet" href="/css/style.css">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Notifications -->
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <!-- Header partial -->
    {{> header}}

    <!-- Navigation partial -->
    {{> nav}}

    <!-- Main content -->
    <main class="container mt-4">
        {{{body}}}
    </main>

    <!-- Footer partial -->
    {{> footer}}

    <!-- Font Awesome Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- MDB UI Kit (optional, if you’re using it) -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/7.1.0/mdb.umd.min.js"></script>

    <!-- Custom JavaScript -->
    <script src="/js/script.js"></script>

    <!-- Notification Script -->
    <script>
    const socket = io();

    // Function to fetch and update notifications
    function fetchNotifications() {
        fetch('/api/notifications')
        .then(response => response.json())
        .then(data => {
            const notificationBadge = document.querySelector('.badge.bg-danger');
            const notificationDropdown = document.querySelector('.dropdown-menu[aria-labelledby="navbarDropdownMenuLink"]');

            if (notificationBadge) {
            notificationBadge.textContent = data.notifications.length;
            } else if (data.notifications.length > 0) {
            const bellIcon = document.querySelector('.fa-bell');
            if (bellIcon) {
                const badge = document.createElement('span');
                badge.classList.add('position-absolute', 'top-0', 'start-10', 'translate-middle', 'badge', 'rounded-pill', 'bg-danger');
                badge.textContent = data.notifications.length;
                const visuallyHidden = document.createElement('span');
                visuallyHidden.classList.add('visually-hidden');
                visuallyHidden.textContent = 'unread messages';
                badge.appendChild(visuallyHidden);
                bellIcon.parentNode.insertBefore(badge, bellIcon.nextSibling);
            }
            }

            if (notificationDropdown) {
            notificationDropdown.innerHTML = '';
            if (data.notifications.length > 0) {
                data.notifications.forEach(notification => {
                const li = document.createElement('li');
                const a = document.createElement('a');
                a.classList.add('dropdown-item');
                a.href = `/social#post-${notification.postId}`;
                a.textContent = notification.message;
                li.appendChild(a);
                notificationDropdown.appendChild(li);
                });
            } else {
                const li = document.createElement('li');
                const a = document.createElement('a');
                a.classList.add('dropdown-item');
                a.href = '#';
                a.textContent = 'No new notifications';
                li.appendChild(a);
                notificationDropdown.appendChild(li);
            }
            }
        })
        .catch(error => console.error('Error fetching notifications:', error));
    }

    // Fetch notifications on page load if the user is logged in
    document.addEventListener('DOMContentLoaded', () => {
        // Check if the user object exists (meaning the user is logged in)
        if ('{{user}}' !== 'null' && '{{user}}' !== '') {
        fetchNotifications();
        }
    });

    socket.on('notificationUpdate', () => {
        console.log('Notification update received');
        fetchNotifications(); // Re-fetch notifications on real-time updates
    });
    </script>
</body>
</html>
